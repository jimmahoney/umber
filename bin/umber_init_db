#!/usr/bin/env bash
#
# Create a new sqlite3 database and initialize it.

# Is the project environment setup?
: ${UMBER_ROOT:?"Setup umber environment with 'source env/activate' first."}
cd $UMBER_ROOT   # Set the working folder to the project root.

# If it already exists, back it up with a timestamp.
if [ -f $UMBER_DATA ]; then
    mv $UMBER_DATA $UMBER_DATA.backup.`date +%F_%R`
fi

# Create it and initialize the tables from the .sql definitions.
    
# Initialize sqlite3 database and its tables if it doesn't already exist,
# and populate with default data (roles, demo course and users for tests,
# default_course, site course, and (optionally in production) an admin.
# (This shouldn't modify a database which has already been initialized
#  ... except for option to add an adminstrative user.)

sqlite3 $UMBER_DATA  < $UMBER_ROOT/database/umber.sql

cd $UMBER_ROOT/src
if [ $UMBER_CONFIG = "DEVELOPMENT" ]; then
    python3 -c "import model; model.init_db(); model.populate_db()"
else
    python3 -c "import model; model.init_db(); " + \
	       "model.populate_production_db(interactive=True)"
fi

# To create pwiz_model.py (which isn't loaded into the software but 
# instead is a starting point for classes in src/model.py), run
# $ python3 -m pwiz -e sqlite3 umber.db > pwiz_model.py
