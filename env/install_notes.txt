env/install.txt

See ../Makefile , eh?

Installation instructions

 1a. Install git and sqlite3.
     ("brew install" on a mac; "apt-get install" on ubuntu.)
     To check to see if they're present do
 
      $ git --version
      $ sqlite3 --version

 2. Install a virtual python environment

    (Originally python2.7; as of Aug 2019, python3.7)

    Get python and a compatible virtualenv
    ... probably already installed; otherwise see e.g. python.org.
    (See below for ubuntu 18 & python3.7 instructions.)

      $ python --version
      $ virtualenv --version

    Create the virtual environment venv folder.

      $ virtualenv --python=pythonX.X venv

    Actifate the new python

      $ . venv/bin/activate

    Load the project python packages.

      $ pip install -r env/requirements.txt

 3. For development, turn on that python environment with

      $ . env/activate
      
    which also sets up the project environment variables.

 4. After changes to the installed packages, the specs can be updated with

     $ pip freeze > requirements_new.txt

========================
Aug 2019

  installing umber & python 3.7 on ubuntu 18

    python3.7
    ------
    
    https://linuxize.com/post/how-to-install-python-3-7-on-ubuntu-18-04/
    $ sudo bash
    $ apt update
    $ apt install software-properties-common
    $ add-apt-repository ppa:deadsnakes/ppa
    $ apt update
    $ apt install python3.7
    stackoverflow.com/questions/54633657/how-to-install-pip-for-python-3-7-on-ubuntu-18
    $ apt install python3-pip        # installs pip3
    $ python3.7 -m pip install pip
    $ python3.7 -m pip --version

    umber (python3 branch)
    -----

    $ git clone -b python3 https://github.com/jimmahoney/umber.git
      changed owner to mahoney:mahoney
      (I put this in /var/www/umber3 , leaving /var/www/umber in place.)

    virtualenv & packages
    -------------------------

    $ virtualenv --python=python3.7 venv
    $ . venv/bin/activate
    (venv) $ pip install -r env/requirements.txt

    I had trouble with the default dulwich (python git wrapper) install.
    I installed it manually instead : 
       $ pip install dulwich --global-option="--pure"
